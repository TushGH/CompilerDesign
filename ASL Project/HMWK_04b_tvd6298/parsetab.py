
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocLTLEEQNEGEGTleftPLUSMINUSleftMULTIPLYDIVIDEMODDIVAND ASSIGN AT BY COLON COMMA CONST DIV DIVIDE DO ELIF ELSE EQ EXIT EXTENDS FI FOR FUNC GE GT ID IF INTEGER LBRACE LBRACKET LE LOOP LPAREN LT MINUS MOD MULTIPLY NE NEXT NOT OF OR PERIOD PLUS PTR RBRACE RBRACKET READ REAL RECORD RETURN RPAREN SEMICOLON STRING THEN TO VAR WHILE WRITEprogram : blockblock : LBRACE block_items RBRACEempty :block_items : emptyblock_items : x_prefix block_itemx_prefix : emptyx_prefix : x_prefix block_item SEMICOLONblock_item : statementexpression : REALexpression : INTEGERexpression : STRING expression : lvalueexpression : LPAREN expression RPARENexpression : uniop expressionstatement : WRITE LPAREN expressions RPAREN expressions : empty expressions : x_preff  expressionx_preff : emptyx_preff : x_preff expression COMMAuniop : MINUS\n             | NOTlvalue : IDlvalue : lvalue LBRACKET expression RBRACKETlvalue : lvalue PERIOD IDexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression GT expression\n                  | expression EQ expression\n                  | expression NE expression\n                  expression : EXIT\n                  | NEXT statement : blockstatement : lvalue ASSIGN expressionstatement : expression LBRACKET expression RBRACKET '
    
_lr_action_items = {'LBRACE':([0,3,5,6,24,],[3,-3,-6,3,-7,]),'$end':([1,2,7,],[0,-1,-2,]),'RBRACE':([3,4,5,7,8,9,12,15,16,17,18,21,22,27,46,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,],[-3,7,-4,-2,-5,-8,-41,-22,-9,-10,-11,-39,-40,-12,-14,-13,-42,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-15,-23,-43,]),'WRITE':([3,5,6,24,],[-3,-6,10,-7,]),'ID':([3,5,6,11,19,20,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,15,15,15,-20,-21,-7,-3,15,15,53,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-18,15,-19,]),'REAL':([3,5,6,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,16,16,16,-20,-21,-7,-3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-18,16,-19,]),'INTEGER':([3,5,6,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,17,17,17,-20,-21,-7,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-18,17,-19,]),'STRING':([3,5,6,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,18,18,18,-20,-21,-7,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-18,18,-19,]),'LPAREN':([3,5,6,10,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,11,25,11,11,-20,-21,-7,-3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-18,11,-19,]),'EXIT':([3,5,6,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,21,21,21,-20,-21,-7,-3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-18,21,-19,]),'NEXT':([3,5,6,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,22,22,22,-20,-21,-7,-3,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-18,22,-19,]),'MINUS':([3,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,73,],[-3,-6,20,20,-12,33,-22,-9,-10,-11,20,-20,-39,-40,-21,-7,-3,33,-12,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,33,-18,20,-13,33,33,-24,33,-25,-26,-27,-28,-29,-30,33,33,33,33,33,33,33,33,33,-23,-19,]),'NOT':([3,5,6,11,19,20,23,24,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,73,],[-3,-6,23,23,23,-20,-21,-7,-3,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,23,-19,]),'SEMICOLON':([7,8,9,12,15,16,17,18,21,22,27,46,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,],[-2,24,-8,-41,-22,-9,-10,-11,-39,-40,-12,-14,-13,-42,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-15,-23,-43,]),'ASSIGN':([13,15,53,71,],[28,-22,-24,-23,]),'LBRACKET':([13,14,15,16,17,18,21,22,27,46,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,],[29,31,-22,-9,-10,-11,-39,-40,29,-14,-13,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-23,]),'PERIOD':([13,15,27,53,71,],[30,-22,30,-24,-23,]),'PLUS':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,32,-22,-9,-10,-11,-39,-40,32,-12,32,-13,32,32,-24,32,-25,-26,-27,-28,-29,-30,32,32,32,32,32,32,32,32,32,-23,]),'MULTIPLY':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,34,-22,-9,-10,-11,-39,-40,34,-12,34,-13,34,34,-24,34,34,34,-27,-28,-29,-30,34,34,34,34,34,34,34,34,34,-23,]),'DIVIDE':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,35,-22,-9,-10,-11,-39,-40,35,-12,35,-13,35,35,-24,35,35,35,-27,-28,-29,-30,35,35,35,35,35,35,35,35,35,-23,]),'DIV':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,36,-22,-9,-10,-11,-39,-40,36,-12,36,-13,36,36,-24,36,36,36,-27,-28,-29,-30,36,36,36,36,36,36,36,36,36,-23,]),'MOD':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,37,-22,-9,-10,-11,-39,-40,37,-12,37,-13,37,37,-24,37,37,37,-27,-28,-29,-30,37,37,37,37,37,37,37,37,37,-23,]),'OR':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,38,-22,-9,-10,-11,-39,-40,38,-12,38,-13,38,38,-24,38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,38,-23,]),'AND':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,39,-22,-9,-10,-11,-39,-40,39,-12,39,-13,39,39,-24,39,-25,-26,-27,-28,-29,-30,39,-32,-33,-34,-35,-36,-37,-38,39,-23,]),'LT':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,40,-22,-9,-10,-11,-39,-40,40,-12,40,-13,40,40,-24,40,-25,-26,-27,-28,-29,-30,40,40,None,None,None,None,None,None,40,-23,]),'LE':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,41,-22,-9,-10,-11,-39,-40,41,-12,41,-13,41,41,-24,41,-25,-26,-27,-28,-29,-30,41,41,None,None,None,None,None,None,41,-23,]),'GE':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,42,-22,-9,-10,-11,-39,-40,42,-12,42,-13,42,42,-24,42,-25,-26,-27,-28,-29,-30,42,42,None,None,None,None,None,None,42,-23,]),'GT':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,43,-22,-9,-10,-11,-39,-40,43,-12,43,-13,43,43,-24,43,-25,-26,-27,-28,-29,-30,43,43,None,None,None,None,None,None,43,-23,]),'EQ':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,44,-22,-9,-10,-11,-39,-40,44,-12,44,-13,44,44,-24,44,-25,-26,-27,-28,-29,-30,44,44,None,None,None,None,None,None,44,-23,]),'NE':([13,14,15,16,17,18,21,22,26,27,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-12,45,-22,-9,-10,-11,-39,-40,45,-12,45,-13,45,45,-24,45,-25,-26,-27,-28,-29,-30,45,45,None,None,None,None,None,None,45,-23,]),'RPAREN':([15,16,17,18,21,22,25,26,27,46,47,48,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-22,-9,-10,-11,-39,-40,-3,50,-12,-14,69,-16,-13,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-17,-23,]),'RBRACKET':([15,16,17,18,21,22,27,46,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,],[-22,-9,-10,-11,-39,-40,-12,-14,-13,71,-24,72,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-23,]),'COMMA':([15,16,17,18,21,22,27,46,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,],[-22,-9,-10,-11,-39,-40,-12,-14,-13,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,73,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,6,],[2,12,]),'block_items':([3,],[4,]),'empty':([3,25,],[5,48,]),'x_prefix':([3,],[6,]),'block_item':([6,],[8,]),'statement':([6,],[9,]),'lvalue':([6,11,19,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,],[13,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression':([6,11,19,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,],[14,26,46,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,]),'uniop':([6,11,19,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expressions':([25,],[47,]),'x_preff':([25,],[49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','hmwk_03b.py',138),
  ('block -> LBRACE block_items RBRACE','block',3,'p_block','hmwk_03b.py',142),
  ('empty -> <empty>','empty',0,'p_empty','hmwk_03b.py',146),
  ('block_items -> empty','block_items',1,'p_block_items_empty','hmwk_03b.py',150),
  ('block_items -> x_prefix block_item','block_items',2,'p_block_items','hmwk_03b.py',154),
  ('x_prefix -> empty','x_prefix',1,'p_x_prefix_empty','hmwk_03b.py',159),
  ('x_prefix -> x_prefix block_item SEMICOLON','x_prefix',3,'p_x_prefix','hmwk_03b.py',163),
  ('block_item -> statement','block_item',1,'p_block_item','hmwk_03b.py',168),
  ('expression -> REAL','expression',1,'p_expression_Real','hmwk_03b.py',172),
  ('expression -> INTEGER','expression',1,'p_expression_integer','hmwk_03b.py',176),
  ('expression -> STRING','expression',1,'p_expression_string','hmwk_03b.py',184),
  ('expression -> lvalue','expression',1,'p_expression_lvalue','hmwk_03b.py',188),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_exp','hmwk_03b.py',192),
  ('expression -> uniop expression','expression',2,'p_expression_uniop','hmwk_03b.py',196),
  ('statement -> WRITE LPAREN expressions RPAREN','statement',4,'p_statement_write','hmwk_03b.py',209),
  ('expressions -> empty','expressions',1,'p_expressions_empty','hmwk_03b.py',214),
  ('expressions -> x_preff expression','expressions',2,'p_expressions','hmwk_03b.py',218),
  ('x_preff -> empty','x_preff',1,'p_x_preff_empty','hmwk_03b.py',223),
  ('x_preff -> x_preff expression COMMA','x_preff',3,'p_x_preff','hmwk_03b.py',227),
  ('uniop -> MINUS','uniop',1,'p_uniop','hmwk_03b.py',240),
  ('uniop -> NOT','uniop',1,'p_uniop','hmwk_03b.py',241),
  ('lvalue -> ID','lvalue',1,'p_lvalue_id','hmwk_03b.py',247),
  ('lvalue -> lvalue LBRACKET expression RBRACKET','lvalue',4,'p_lvalue_array','hmwk_03b.py',251),
  ('lvalue -> lvalue PERIOD ID','lvalue',3,'p_lvalue_record','hmwk_03b.py',255),
  ('expression -> expression PLUS expression','expression',3,'p_binaryop','hmwk_03b.py',260),
  ('expression -> expression MINUS expression','expression',3,'p_binaryop','hmwk_03b.py',261),
  ('expression -> expression MULTIPLY expression','expression',3,'p_binaryop','hmwk_03b.py',262),
  ('expression -> expression DIVIDE expression','expression',3,'p_binaryop','hmwk_03b.py',263),
  ('expression -> expression DIV expression','expression',3,'p_binaryop','hmwk_03b.py',264),
  ('expression -> expression MOD expression','expression',3,'p_binaryop','hmwk_03b.py',265),
  ('expression -> expression OR expression','expression',3,'p_binaryop','hmwk_03b.py',266),
  ('expression -> expression AND expression','expression',3,'p_binaryop','hmwk_03b.py',267),
  ('expression -> expression LT expression','expression',3,'p_binaryop','hmwk_03b.py',268),
  ('expression -> expression LE expression','expression',3,'p_binaryop','hmwk_03b.py',269),
  ('expression -> expression GE expression','expression',3,'p_binaryop','hmwk_03b.py',270),
  ('expression -> expression GT expression','expression',3,'p_binaryop','hmwk_03b.py',271),
  ('expression -> expression EQ expression','expression',3,'p_binaryop','hmwk_03b.py',272),
  ('expression -> expression NE expression','expression',3,'p_binaryop','hmwk_03b.py',273),
  ('expression -> EXIT','expression',1,'p_statement_single','hmwk_03b.py',293),
  ('expression -> NEXT','expression',1,'p_statement_single','hmwk_03b.py',294),
  ('statement -> block','statement',1,'p_statement_block','hmwk_03b.py',300),
  ('statement -> lvalue ASSIGN expression','statement',3,'p_statement_lvalueAExp','hmwk_03b.py',304),
  ('statement -> expression LBRACKET expression RBRACKET','statement',4,'p_statement_expexp','hmwk_03b.py',308),
]
